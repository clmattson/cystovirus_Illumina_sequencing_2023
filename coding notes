#what are the reads?
for i in *.fastq; do sed -n '1~4s/^@/>/p;2~4p' $i > $i.fasta; done
for i in *.fasta; do blastn -query ${i} -subject wild_cysto_refs.fasta -outfmt '6 delim=,' -max_target_seqs 1 -max_hsps 1 >> ${i}_cysto_temp_blast_out.csv; done
for i in *.fasta; do sed "s/$/,"${i}"/" ${i}_cysto_temp_blast_out.csv > ${i}_${cysto_blast_db}_blast_out.csv; done
wc -l *_cysto_temp_blast_out.csv


#assess read quality
fastqc fastqs/*.fastq --outdir fastqc-out/


#quality trim
  
for pair in ./fastqs/*_*R1*.fastq; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp)
fastp --in1 ./fastqs/${sample}*R1*.fastq \
  --in2 ./fastqs/${sample}*R2*.fastq \
  --out1 ./trimmed_fastqs/${sample}_SXX_L001_R1_001.qtrim.fastq \
  --out2 ./trimmed_fastqs/${sample}_SXX_L001_R2_001.qtrim.fastq \
  --detect_adapter_for_pe \
  --length_required 31 --correction;
done


#remove host contamination

#build host db
bowtie2-build P_savastanoi_ref.fasta Ps_db

#align each set of reads to the host genome
for pair in ./fastqs/*_*R1*.fastq; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp);
bowtie2 -p 8 -x Ps_db -1 ./trimmed_fastqs/${sample}_SXX_L001_R1_001.qtrim.fastq  -2 ./trimmed_fastqs/${sample}_SXX_L001_R2_001.qtrim.fastq  -S ./trimmed_host/${sample}_SXX_L001_001.qtrim.htrim.sam;
done

#sam to bam

for pair in *_SXX_L001_001.qtrim.htrim.sam; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp);
samtools view -bS ${pair} > ${sample}_SXX_L001_001.qtrim.htrim.bam;
done

#sort bam
for pair in *_SXX_L001_001.qtrim.htrim.bam; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp);
samtools sort -o ${sample}_SXX_L001_001.qtrim.htrim.sorted.bam -T ./samtools_temp_dir --threads 24 ${pair};
done

#remove mapped reads
#actually I think this isnt quite right, see below
for pair in *_SXX_L001_001.qtrim.htrim.sorted.bam; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp);
samtools view -b -f 4 ${pair} > ${sample}_SXX_L001_001.qhtrim.sorted.unmapped.bam
done

#so the '-f 12' flag means to keep only reads where both mates in the pair are unmapped, which is more thorough since pe reads come from 1 piece of dna
for pair in *_SXX_L001_001.qtrim.htrim.sorted.bam; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp);
samtools view -b -f 12 ${pair} > ${sample}_SXX_L001_001.qhtrim.sorted.unmapped.bam
done


#need to get filtered bam back to fastq's. sort again?
#sort bam
for pair in *_SXX_L001_001.qhtrim.sorted.unmapped.bam; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp);
samtools sort -o ${sample}_SXX_L001_001.qhtrim.unmapped.sorted2.bam -T ./samtools_temp_dir2 --threads 24 ${pair};
done


for pair in *_SXX_L001_001.qhtrim.unmapped.sorted2.bam; 
#get leading sample name letter only
do sample_temp=${pair%%_*};
sample=$(basename $sample_temp);
samtools fastq -@ 8 ${sample}_SXX_L001_001.qhtrim.unmapped.sorted2.bam -1 ${sample}_SXX_L001_001.R1.qhtrim.unmapped.sorted2.fastq -2 ${sample}_SXX_L001_001.R2.qhtrim.unmapped.sorted2.fastq;
done



#assembly
#--metaviral
for pair in final_trimmed_fastqs/*_SXX_L001_001.R1.qhtrim.unmapped.sorted2.fastq; 
do file=$(basename $pair); 
sample_temp=${file%%_*}; 
sample=$(basename $sample_temp); 
spades.py --metaviral --pe1-1 final_trimmed_fastqs/${sample}_SXX_L001_001.R1.qhtrim.unmapped.sorted2.fastq --pe1-2 final_trimmed_fastqs/${sample}_SXX_L001_001.R2.qhtrim.unmapped.sorted2.fastq -o spades/metaviral/${sample}_metaviral_spades_output;
done





samtools view -b -f 12 -F 256 SAMPLE_mapped_and_unmapped.bam > SAMPLE_bothReadsUnmapped.bam















